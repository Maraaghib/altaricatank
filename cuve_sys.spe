with system do
    deadlock := any_s - src(any_t - self_epsilon);
    notResetable := any_s - coreach(initial, any_t);
    /* Niveaux Critiques et situations redoutées */
    NC := any_s & [T.level = 0 | T.level = nbSensors];
    SR := NC | deadlock ;
    /* système d'équation au point fixe pour la synthèse de controleur
    *  CGagnant = (any_s - SR) & src(CCoupGagnant)
    *  CCoupGagnant = CCoup & rtgt(EPerdant)
    *  EPerdant = (any_s - SR) & (src(ECoupPerdant - src(ECoupNonPerdant)))
    *  ECoupPerdant = ECoup & rtgt (CGagnant)
    *  ECoupNonPerdant = ECoup & rtgt(any_s - CGagnant)
    */

    /* les constatnes */
    CCoup := any_t & label cmd;
    ECoup := any_t & label env;
    CCoupGagnant -= CCoup & rtgt(
                                (any_s - SR) & 
                                (src(ECoup & rtgt ((any_s - SR) & src(CCoupGagnant))) -
                                 src(ECoup & rtgt(any_s - ((any_s - SR) & 
                                 src(CCoupGagnant))))));

    /* le controleur peut il controler? */
    CtrlGagnant := rsrc(initial) & CCoupGagnant;
    /* calcul du controler */
    project(any_s, (empty_t, CCoupGagnant), 'CtrlUn', true, C) > 'CtrlUn.alt';
done